---
import Scaling from './Scaling.astro';
import SlideLab from './SlideLab.astro';
import Slide3 from './Slide3.astro';
import Slide4 from './Slide4.astro';
import Slide5 from './Slide5.astro';
import '../styles/global.css';
---

<section id="why-choose-us" class="relative w-full min-h-screen flex items-center justify-center overflow-hidden">
  <div class="w-full h-full flex items-center justify-center m-0">
    <div id="carousel-slide-0" class="carousel-slide w-full h-full flex items-center justify-center absolute transition-all duration-[1400ms] ease-[cubic-bezier(0.4,0,0.2,1)] opacity-0 pointer-events-none translate-x-full z-0">
      <Scaling />
    </div>
    <div id="carousel-slide-1" class="carousel-slide w-full h-full flex items-center justify-center absolute transition-all duration-[1400ms] ease-[cubic-bezier(0.4,0,0.2,1)] opacity-0 pointer-events-none translate-x-full z-0">
      <SlideLab />
    </div>
    <div id="carousel-slide-2" class="carousel-slide w-full h-full flex items-center justify-center absolute transition-all duration-[1400ms] ease-[cubic-bezier(0.4,0,0.2,1)] opacity-0 pointer-events-none translate-x-full z-0">
      <Slide3 />
    </div>
    <div id="carousel-slide-3" class="carousel-slide w-full h-full flex items-center justify-center absolute transition-all duration-[1400ms] ease-[cubic-bezier(0.4,0,0.2,1)] opacity-0 pointer-events-none translate-x-full z-0">
      <Slide4 />
    </div>
    <div id="carousel-slide-4" class="carousel-slide w-full h-full flex items-center justify-center absolute transition-all duration-[1400ms] ease-[cubic-bezier(0.4,0,0.2,1)] opacity-0 pointer-events-none translate-x-full z-0">
      <Slide5 />
    </div>
    <div class="absolute left-1/2 -translate-x-1/2 bottom-8 flex gap-5 z-30">
      <span class="sr-only">Navegaci√≥n de slides</span>
      {Array.from({length: 5}).map((_, idx) => (
        <button
          class="w-5 h-5 rounded-full bg-transparent flex items-center justify-center transition-all duration-200 focus:outline-none hover:scale-110"
          data-idx={idx}
          aria-label={`Ir al slide ${idx+1}`}
        >
          <span class="block w-3 h-3 rounded-full transition-all duration-200 bg-[#e0e0e0]" data-dot-inner></span>
        </button>
      ))}
    </div>
  </div>
  <script is:inline>
    let current = 0;
    const total = 5;
    const slides = Array.from(document.querySelectorAll('.carousel-slide'));
    const dots = Array.from(document.querySelectorAll('[data-idx]'));
    function showSlide(idx) {
      slides.forEach((slide, i) => {
        slide.style.zIndex = i === idx ? 10 : 0;
      
        slide.classList.remove('translate-x-12', '-translate-x-12');
        if (i === idx) {
          slide.classList.add('opacity-100', 'pointer-events-auto', 'translate-x-0');
          slide.classList.remove('opacity-0', 'pointer-events-none', 'translate-x-full', '-translate-x-full');
        } else if (i < idx) {
          slide.classList.remove('opacity-100', 'pointer-events-auto', 'translate-x-0', 'translate-x-full');
          slide.classList.add('opacity-0', 'pointer-events-none', '-translate-x-12');
        } else {
          slide.classList.remove('opacity-100', 'pointer-events-auto', 'translate-x-0', '-translate-x-full');
          slide.classList.add('opacity-0', 'pointer-events-none', 'translate-x-12');
        }
      });
      dots.forEach((dot, i) => {
        const inner = dot.querySelector('[data-dot-inner]');
        if (i === idx) {
          dot.classList.add('scale-110');
          if(inner) {
            inner.classList.remove('bg-[#e0e0e0]');
            inner.classList.add('bg-[#01bcd4]');
          }
        } else {
          dot.classList.remove('scale-110');
          if(inner) {
            inner.classList.remove('bg-[#01bcd4]');
            inner.classList.add('bg-[#e0e0e0]');
          }
        }
      });
      if (idx === 1 && typeof window.animateSlideLab === 'function') {
        window.animateSlideLab();
      }
      current = idx;
    }
    setTimeout(() => {
      dots.forEach((dot, idx) => {
        dot.onclick = () => showSlide(idx);
      });
      showSlide(current);
    }, 0);
  </script>
</section>
